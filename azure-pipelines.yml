###################################
# When to create a pipeline run
###################################
trigger:
  branches:
    include:
      - main
      - dev
      - QA
      - prod
      
  paths:
    exclude:
    - devops/*    
pr:
- master
- dev/*
- QA/*
- prod/*
- main/*

stages:  
  
  
  - stage: 'List_Files'
    displayName: 'Listing Files'
    jobs:
      - job: ListFiles
        displayName: 'Listing All Files'
        pool:
          vmImage: 'windows-latest'
        steps:
        - checkout: self  # Checkout the repository content

        - powershell: |
            # Define the directory path
            $directoryPath = "$(Build.SourcesDirectory)"

            # List all files in the directory
            Get-ChildItem -Path $directoryPath
          displayName: 'List Files in Directory'


  - stage: 'Deploy_Database_Changes'
    displayName: 'Deploy Database Changes'
    jobs:
      - job: Deploy_Database
        displayName: 'DeployDatabase'
        continueOnError: true
        pool:
          vmImage: "windows-latest"
        steps:
        - task: UseDotNet@2  # Use this task for Windows-based environments
          inputs:
            packageType: 'sdk'
            installationPath: $(Agent.ToolsDirectory)/dotnet
        - powershell: |
            # Define the path to the zip archive
            $zipArchivePath = "$(Build.SourcesDirectory)/Toad.zip"
            # Define the destination path for extraction
            $destinationPath = "$(Build.SourcesDirectory)/Toad"
            # Set environment variables for Toad
            #Expand-Archive -Path "Toad.zip" -DestinationPath "$(Agent.ToolsDirectory)/Toad"
            # Unzip the folder
            Expand-Archive -Path $zipArchivePath -DestinationPath $destinationPath -Force
            
            # List all files within the extracted folder and its subdirectories
            Get-ChildItem -Path $destinationPath -File -Recurse | ForEach-Object {
            Write-Host "File: $($_.FullName)"
            }
            
            # List files within the extracted folder
            #$extractedFiles = Get-ChildItem -Path $destinationPath
            #foreach ($file in $extractedFiles) {
            #Write-Host "File: $($file.Name)"
            #}
            
            #$directoryPath = "$(Build.SourcesDirectory)"
            #Get-ChildItem -Path $directoryPath
            #$env:TOAD_HOME = "$(Agent.ToolsDirectory)/Toad\ToadInstallFolder"
            #$env:PATH = "$env:PATH;$env:TOAD_HOME"
          displayName: 'Unzip Folder and List Files'  
            
        - powershell: |
            $env:TOAD_HOME = "$(Agent.ToolsDirectory)/Toad\ToadInstallFolder"
            $env:PATH = "$env:PATH;$env:TOAD_HOME"
            # Define Toad deployment command
            $toadCommand = "Toad.exe"
            $projectPath = "$(System.DefaultWorkingDirectory)/path/to/your/project"
            $connectionString = "YourConnectionString"
            $deployCommand = "$toadCommand /execute:$projectPath /server:$connectionString"

            # Execute the deployment command
            Invoke-Expression $deployCommand
          displayName: 'Deploy Database Changes'
          